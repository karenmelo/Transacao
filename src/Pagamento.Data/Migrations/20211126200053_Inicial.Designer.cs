// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pagamento.Data.Context;

namespace Pagamento.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20211126200053_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pagamento.Business.Models.CreditCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ExpirationDate")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Holder")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reason")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SecurityCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usage")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Pagamento.Business.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Pagamento.Business.Models.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Href")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Method")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rel")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Pagamento.Business.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Authenticate")
                        .HasColumnType("bit");

                    b.Property<string>("AuthorizationCode")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Capture")
                        .HasColumnType("bit");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Installments")
                        .HasColumnType("int");

                    b.Property<string>("Interest")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsCryptoCurrencyNegotiation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQrCode")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSplitted")
                        .HasColumnType("bit");

                    b.Property<string>("ProofOfSale")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Provider")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProviderReturnCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProviderReturnMessage")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReasonCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReasonMessage")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReceivedDate")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Recurrent")
                        .HasColumnType("bit");

                    b.Property<string>("ReturnCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReturnMessage")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("ServiceTaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tid")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(100)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Pagamento.Business.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MerchantOrderId")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Pagamento.Business.Models.Link", b =>
                {
                    b.HasOne("Pagamento.Business.Models.Payment", "Payment")
                        .WithMany("Links")
                        .HasForeignKey("PaymentId")
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Pagamento.Business.Models.Transaction", b =>
                {
                    b.HasOne("Pagamento.Business.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .IsRequired();

                    b.HasOne("Pagamento.Business.Models.Payment", "Payment")
                        .WithMany("Transactions")
                        .HasForeignKey("PaymentId")
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Pagamento.Business.Models.Payment", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
